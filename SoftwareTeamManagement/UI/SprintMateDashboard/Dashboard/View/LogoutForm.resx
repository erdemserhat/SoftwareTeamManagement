<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>